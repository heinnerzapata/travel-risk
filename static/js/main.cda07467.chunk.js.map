{"version":3,"sources":["static/images/back.jpg","static/images/loading.gif","components/Background.js","components/Title.js","components/Card.js","containers/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Background","props","className","cx","src","back","children","Title","titleStyle","fontSize","size","fontWeight","fontFamily","color","value","style","text","Card","options","label","Home","state","selectedValue","selectedOption","selectedOption2","calcState","handleChange","setState","handleChangeSelect","handleChangeSelect2","getRandomRisk","Math","random","toFixed","handleCalc","event","setTimeout","risk","handleCalc2","subTitleStyle","fieldDesc","marginRight","this","xs","center","md","type","width","placeholder","name","onChange","onClick","height","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cda07467.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/back.7600089c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/loading.556e9ff8.gif\";","import React from \"react\";\nimport cx from \"classnames\";\nimport \"./Background.scss\";\nimport back from \"./../static/images/back.jpg\";\n\nconst Background = props => {\n  return (\n    <div className={cx(\"background\")}>\n      <img className=\"background__img\" src={back} />\n      <div className=\"background__content\">{props.children}</div>\n    </div>\n  );\n};\n\nexport default Background;\n","import React from \"react\";\n\nconst Title = props => {\n  const titleStyle = {\n    fontSize: `${props.size}px`,\n    fontWeight: 'bold',\n    fontFamily: 'Kaushan Script',\n    color: props.value ? ((props.value > 70) ? 'red' : '#00ff00') : 'white'\n  };\n  return <span style={titleStyle}>{props.text}</span>;\n};\n\nexport default Title;\n","import React from \"react\";\nimport './Card.scss';\n\nconst Card = props => {\n  return <div className=\"card\">{props.children}</div>;\n};\n\nexport default Card;\n","import React, { Component } from \"react\";\nimport Background from \"./../components/Background\";\nimport Title from \"./../components/Title\";\nimport Card from \"./../components/Card\";\nimport { Grid, Row, Col } from \"react-flexbox-grid\";\nimport { RadioGroup, Radio } from \"react-radio-group\";\nimport Select from \"react-select\";\nimport \"../../src/index.scss\";\nimport loading from \"./../static/images/loading.gif\";\nimport Loader from \"react-loader-spinner\";\n\nconst options = [\n  { value: \"COL\", label: \"Colombia\" },\n  { value: \"US\", label: \"Estados Unidos\" }\n];\n\nclass Home extends Component {\n  state = {\n    selectedValue: \"male\",\n    selectedOption: null,\n    selectedOption2: null,\n    calcState: 0\n  };\n\n  handleChange = value => {\n    this.setState({ selectedValue: value });\n  };\n\n  handleChangeSelect = selectedOption => {\n    this.setState({ selectedOption });\n  };\n\n  handleChangeSelect2 = selectedOption2 => {\n    this.setState({ selectedOption2 });\n  };\n\n  getRandomRisk = () => {\n    return (Math.random() * 100).toFixed(2);\n  }\n\n  handleCalc = event => {\n    this.setState({ calcState: 1 });\n    setTimeout(() => {\n      this.setState({ calcState: 2, risk: this.getRandomRisk() });\n    }, 3000);\n  };\n\n  handleCalc2 = event => {\n    this.setState({ calcState: 0 });\n  };\n\n  render() {\n    const subTitleStyle = {\n      fontSize: \"32px\",\n      fontWeight: \"bold\",\n      color: \"white\"\n    };\n\n    const fieldDesc = {\n      fontSize: \"30px\",\n      fontWeight: \"bold\",\n      color: \"white\",\n      marginRight: \"20px\",\n      risk: 0\n    };\n\n    return (\n      <Background>\n        {this.state.calcState === 0 && (\n          <Grid>\n            <Row>\n              <Col xs={12}>\n                <div className=\"flex-column\">\n                  <Title text={\"Travel Risk\"} size={90} />\n                  <span style={subTitleStyle}>By XTeam</span>\n                </div>\n              </Col>\n            </Row>\n            <Row center=\"xs\">\n              <Col md={8} xs={12}>\n                <Card>\n                  <Row center=\"xs\">\n                    <Col xs={12} className=\"flex-column\">\n                      <input\n                        className=\"input\"\n                        type=\"number\"\n                        style={{ width: \"150px\" }}\n                        placeholder=\"Edad\"\n                      />\n                    </Col>\n                    <Col xs={12}>\n                      <RadioGroup\n                        name=\"sex\"\n                        selectedValue={this.state.selectedValue}\n                        onChange={this.handleChange}\n                      >\n                        <Radio value=\"male\" />\n                        <span style={fieldDesc}>Hombre</span>\n                        <Radio value=\"female\" />\n                        <span style={fieldDesc}>Mujer</span>\n                      </RadioGroup>\n                    </Col>\n                    <Col xs={12}>\n                      <br />\n                      <span style={fieldDesc}>Pais Origen</span>\n                      <Select\n                        value={this.state.selectedOption}\n                        onChange={this.handleChangeSelect}\n                        options={options}\n                      />\n                    </Col>\n                    <Col xs={12}>\n                      <br />\n                      <span style={fieldDesc}>Pais Destino</span>\n                      <Select\n                        value={this.state.selectedOption2}\n                        onChange={this.handleChangeSelect2}\n                        options={options}\n                      />\n                    </Col>\n                    <Col xs={12}>\n                      <br />\n                      <button className=\"button\" onClick={this.handleCalc}>\n                        Calcular\n                      </button>\n                    </Col>\n                  </Row>\n                </Card>\n              </Col>\n            </Row>\n          </Grid>\n        )}\n\n        {this.state.calcState === 1 && (\n          <div className=\"loaderContainter\">\n            <Loader type=\"Puff\" color=\"#ffff00\" height=\"100\" width=\"100\" />\n            <span style={subTitleStyle}>Calculando Riesgo</span>\n          </div>\n        )}\n\n        {this.state.calcState === 2 && (\n          <div className=\"loaderContainter\">\n            <Row center=\"xs\">\n              <Col md={10} xs={12}>\n                <Card>\n                  <Title text={`${this.state.risk}%`} value={this.state.risk} size={120} />\n                  <button className=\"button\" onClick={this.handleCalc2}>\n                    nuevo calculo\n                  </button>\n                </Card>\n              </Col>\n            </Row>\n          </div>\n        )}\n      </Background>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport Home from './containers/Home';\nimport \"./App.scss\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}